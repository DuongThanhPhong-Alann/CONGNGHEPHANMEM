@model QLCCCC.Models.NguoiDung

@{
    ViewData["Title"] = "Đăng ký";
}

<style>
    .register-form {
        max-width: 350px;
        margin: 20px auto;
        padding: 20px;
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    h2 {
        color: #007bff; /* Màu xanh nhẹ cho tiêu đề */
        text-align: center;
        font-size: 1.5rem;
        margin-bottom: 20px;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        border-radius: 5px;
        padding: 8px;
        font-size: 1rem;
    }

        .form-control:focus {
            border-color: #007bff; /* Màu xanh nhẹ cho viền khi focus */
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);
        }

    .text-danger {
        font-size: 0.85rem;
    }

    .alert-danger {
        padding: 10px;
        font-size: 0.9rem;
        margin-bottom: 20px;
    }

    .btn-primary {
        background-color: #007bff; /* Màu xanh nhẹ cho nút */
        border: none;
        width: 100%;
        padding: 10px;
        border-radius: 5px;
        font-size: 1rem;
    }

        .btn-primary:hover {
            background-color: #0056b3; /* Màu xanh đậm khi hover */
        }

    .login-link {
        text-align: center;
        margin-top: 15px;
        font-size: 0.9rem;
    }

        .login-link a {
            color: #007bff; /* Màu xanh nhẹ cho link */
            text-decoration: none;
        }

            .login-link a:hover {
                text-decoration: underline;
            }
</style>

<div class="register-form">
    <h2>Đăng ký</h2>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <p>@error.ErrorMessage</p>
            }
        </div>
    }
    <div id="password-alert" class="alert alert-danger d-none" role="alert"></div>

    <form asp-controller="Auth" asp-action="Register" method="post">
        <div class="form-group">
            <label>Email</label>
            <input asp-for="Email" class="form-control" required />
            <span class="text-danger" asp-validation-for="Email"></span>
        </div>

        <div class="form-group">
            <label>Tên người dùng</label>
            <input asp-for="HoTen" class="form-control" required />
            <span class="text-danger" asp-validation-for="HoTen"></span>
        </div>

        <div class="form-group">
            <label>Số điện thoại</label>
            <input asp-for="SoDienThoai" class="form-control" required />
            <span class="text-danger" asp-validation-for="SoDienThoai"></span>
        </div>

        <div class="form-group">
            <label>Mật khẩu</label>
            <input asp-for="MatKhau" type="password" class="form-control" required />
            <span class="text-danger" asp-validation-for="MatKhau"></span>
        </div>

        <button type="submit" class="btn btn-primary">Đăng ký</button>
    </form>

    <p class="login-link">
        Đã có tài khoản? <a asp-action="Login">Đăng nhập</a>
    </p>
</div>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.querySelector("form").addEventListener("submit", function (e) {
            const password = document.querySelector("input[name='MatKhau']").value;
            const alertBox = document.getElementById("password-alert");
            const pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).{8,}$/;

            if (!pattern.test(password)) {
                e.preventDefault();
                alertBox.textContent = "Mật khẩu phải có ít nhất 8 ký tự, bao gồm chữ hoa, chữ thường, số và ký tự đặc biệt.";
                alertBox.classList.remove("d-none");

                setTimeout(() => {
                    alertBox.classList.add("d-none");
                }, 3000); // 3 giây
            }
        });
    </script>
}

